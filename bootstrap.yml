# vi: set ft=yaml.ansible :
---
- hosts: UX305LA
  become: yes
  gather_facts: no
  pre_tasks:
    - name: Update dnf cache
      raw: sudo dnf -y update -x kernel*

    - name: Set dnf configuration
      lineinfile:
        path: /etc/dnf/dnf.conf
        line: exclude=kernel*
        state: present

  vars:

    atom_package_release_tag: 1564072207
    atom_version: 1.39.1

    ccat_version: 1.1.0
    
    docker_release_version: 30

    golang_version: 1.12.7

    hack_font_version: 2.0.0 

    mailspring_version: 1.6.3
        
    openvpn_password: hMN8XQa
    openvpn_server_location: DE4
    openvpn_username: vpnbook

    terraform_version: 0.12.6 
    
    users:
        - root
        - SoBeRBot94

  tasks:

  - name: Disable SELinux
    lineinfile:
      path: /etc/selinux/config
      regexp: '^SELINUX='
      line: 'SELINUX=disabled'
      state: present

  - name: Create temporary and temporary-downloads directories
    file:
      path: ./{{ item }}
      state: directory
    with_items:
      - tmp
      - tmp-downloads

  - name: Fetch stable kernels
    get_url:
      url: https://kojipkgs.fedoraproject.org//packages/kernel/5.0.12/300.fc30/x86_64/{{ item }}
      dest: ./tmp-downloads/{{ item }}
      mode: 0744
    with_items:
      - kernel-5.0.12-300.fc30.x86_64.rpm
      - kernel-core-5.0.12-300.fc30.x86_64.rpm
      - kernel-modules-5.0.12-300.fc30.x86_64.rpm
      - kernel-modules-extra-5.0.12-300.fc30.x86_64.rpm
      - kernel-devel-5.0.12-300.fc30.x86_64.rpm

  - shell: ls ./tmp-downloads/kernel*
    register: kernel_rpms

  - name: Install stable kernels
    dnf:
      name: "{{ kernel_rpms.stdout_lines }}"
      state: present
      allow_downgrade: yes

  - name: Reconfigure bootloader
    raw: sudo grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg

  - name: Enable dnf cache
    lineinfile:
      path: /etc/dnf/dnf.conf
      line: 'keepcache=1'
      state: present

  - name: Fetch rpm fusion packages
    get_url:
      url: https://download1.rpmfusion.org/{{ item }}/fedora/rpmfusion-{{ item }}-release-rawhide.noarch.rpm
      dest: ./tmp-downloads/rpmfusion-{{ item }}-release-rawhide.noarch.rpm
      mode: 0744
    with_items:
      - free
      - nonfree

  - shell: ls ./tmp-downloads/rpmfusion*
    register: rpmfusion_repos

  - name: Install rpm fusion repos
    dnf:
      name: "{{ rpmfusion_repos.stdout_lines }}"
      state: present

  - name: Install fedora workstation repositories
    dnf:
      name: fedora-workstation-repositories
      state: present

  - name: Remove libreoffice packages
    raw: sudo dnf -y remove libreoffice*

  - name: Remove unwanted packages
    dnf:
      name: ['abrt', 'abrt-cli', 'abrt-desktop', 'gnome-boxes', 'rhythmbox']
      state: absent

  - name: Install required packages
    dnf:
      name: [ 'arm-image-installer', 'bleachbit', 'chrome-gnome-shell', 'dconf-editor', 'dc3dd', 'deluge', 'fuse-exfat', 'gnome-tweak-tool', 'google-chrome-stable', 'hdparm', 'most', 'nmap', 'openvpn', 'pandoc', 'snapd', 'tree', 'wipe', 'wl-clipboard']
      state: present
      enablerepo: "{{ item }}"
    with_items:
      - google-chrome
    tags:
      - packages

  - name: Fetch ccat tarball
    get_url:
      url: https://github.com/jingweno/ccat/releases/download/v{{ ccat_version }}/linux-amd64-{{ ccat_version }}.tar.gz
      dest: ./tmp-downloads/ccat.tar.gz

  - name: Extract ccat tarball
    command: tar -C ./tmp/ -xvzf ./tmp-downloads/ccat.tar.gz

  - name: Install ccat
    copy:
      src: ./tmp/linux-amd64-{{ ccat_version }}/ccat
      dest: /usr/local/bin
      mode: 0755

  - name: Setup machine for kvm virtualization
    dnf:
      name: '@virtualization'
      state: present

  - name: Create libvirt group
    group:
      name: libvirt
      state: present

  - name: Add SoBeRBot94 to libvirt group
    user:
      name: SoBeRBot94
      groups: libvirt
      append: yes

  - name: Create polkit rules file
    file:
      path: /etc/polkit-1/rules.d/80-libvirt.rules
      owner: root
      group: root
      mode: 0644
      state: touch

  - name: Update libvirtd.conf to grant access to an unprivilaged user
    replace:
      path: /etc/libvirt/libvirtd.conf
      regexp: "{{ item.regexp }}"
      replace: "{{ item.replace }}"
    with_items:
      - { regexp: '^#unix_sock_group = "libvirt"', replace: 'unix_sock_group = "libvirt"' }
      - { regexp: '^#unix_sock_rw_perms = "0770"', replace: 'unix_sock_rw_perms = "0770"'}
    tags:
      - libvirt

  - name: Edit polkit rules for granting access to an unprivilaged user to libvirt APIs
    copy:
      content: |
        polkit.addRule(function(action, subject) {
        if (action.id == "org.libvirt.unix.manage" && subject.isInGroup("libvirt")) {
        return polkit.Result.YES;
        }
        });
      dest: /etc/polkit-1/rules.d/80-libvirt.rules
    notify:
      - Start libvirtd service

  - name: Install vagrant
    dnf:
      name: vagrant
      state: present

  - name: Install vagrant plugins [ dnf ]
    dnf:
      name: "{{ item }}"
      state: present
    with_items:
      - vagrant-libvirt
      - vagrant-sshfs
    tags:
      - vagrant-plugins-dnf

  - name: Fetch terraform zip archive
    get_url:
      url: https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_linux_amd64.zip
      dest: ./tmp-downloads/terraform.zip

  - name: Unzip terraform zip archive
    unarchive:
      src: ./tmp-downloads/terraform.zip
      dest: ./tmp/

  - name: Install terraform
    copy:
      src: ./tmp/terraform
      dest: /usr/local/bin
      owner: root
      group: root
      mode: 0755

  - name: Setup docker-ce repository
    become: yes
    command: dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo

  - name: Setup releasever and basearch for docker-ce repository
    become: yes
    command: "{{ item }}"
    with_items:
      - sed -i 's/$releasever/{{ docker_release_version }}/g' /etc/yum.repos.d/docker-ce.repo
      - sed -i 's/$basearch/x86_64/g' /etc/yum.repos.d/docker-ce.repo
    notify:
      - Clean dnf metadata
      - Update dnf cache

  - name: Install dnf development packages
    dnf:
      name: [ 'containerd.io', 'docker-ce', 'docker-ce-cli', 'httpie', 'python3-lxml', 'neovim', 'python3-neovim', 'python3-psutil', 'python3-virtualenv', 'supervisor', 'tunctl', 'util-linux-user', 'zsh']
      state: present
      enablerepo: "{{ item }}"
    with_items:
      - docker-ce
    notify:
      - Enable supervisord service
    tags:
      - dnf-devel

  - name: Fetch golang tarball
    get_url: 
      url: https://dl.google.com/go/go{{ golang_version }}.linux-amd64.tar.gz
      dest: ./tmp-downloads/go{{ golang_version }}.linux-amd64.tar.gz
      mode: 0755
      owner: SoBeRBot94
      group: SoBeRBot94
    tags:
      - golang

  - name: Extract tarball
    become: yes
    command: tar -C /usr/local/ -xvzf ./tmp-downloads/go{{ golang_version }}.linux-amd64.tar.gz
    tags:
      - golang

  - name: Clone dotfiles repo
    become_user: SoBeRBot94
    git:
      repo: https://github.com/SoBeRBot94/DotFiles.git
      clone: yes
      dest: ~SoBeRBot94/DotFiles

  - name: Setup openvpn supervisor conf
    become: yes
    file:
      src: ~SoBeRBot94/DotFiles/openVPN.conf
      dest: /etc/supervisord.d/openVPN.ini
      state: link
      owner: root
      group: root
    tags:
      - openvpn

  - name: Fetch vpnbook openvpn certifiacte bundles
    get_url:
      url: https://www.vpnbook.com/free-openvpn-account/VPNBook.com-OpenVPN-{{ openvpn_server_location }}.zip
      dest: ./tmp-downloads/VPNBook.com-OpenVPN-{{ openvpn_server_location }}.zip
    tags:
      - openvpn

  - name: Create vpnbook directory
    file:
      path: ~SoBeRBot94/VPNBook
      state: directory
      owner: SoBeRBot94
      group: SoBeRBot94
      mode: '0755'
    tags:
      - openvpn

  - name: Setup vpnbook openvpn certificates
    unarchive:
      src: ./tmp-downloads/VPNBook.com-OpenVPN-{{ openvpn_server_location }}.zip
      dest: ~SoBeRBot94/VPNBook
      owner: SoBeRBot94
      group: SoBeRBot94
    tags:
      - openvpn

  - name: Setup vpnbook openvpn credentials
    template:
      src: ./templates/credentials.txt.j2
      dest: ~SoBeRBot94/VPNBook/credentials.txt
      owner: SoBeRBot94
      group: SoBeRBot94
    tags:
      - openvpn

  - name: Setup openvpn to fetch credentials from credentials file
    lineinfile:
      path: ~SoBeRBot94/VPNBook/vpnbook-de4-tcp80.ovpn
      regexp: '^auth-user-pass'
      line: auth-user-pass credentials.txt
    tags:
      - openvpn

  - name: Fetch atom rpm
    get_url:
      url: https://atom-installer.github.com/v{{ atom_version }}/atom.x86_64.rpm?s={{ atom_package_release_tag }}&ext=.rpm
      dest: ./tmp-downloads/atom.x86_64.rpm
      mode: 0755
      owner: SoBeRBot94
      group: SoBeRBot94

  - name: Fetch mailspring rpm
    get_url:
      url: https://github.com/Foundry376/Mailspring/releases/download/{{ mailspring_version }}/mailspring-{{ mailspring_version }}-0.1.x86_64.rpm 
      dest: ./tmp-downloads/mailspring-{{ mailspring_version }}-0.1.x86_64.rpm
      mode: 0755
      owner: SoBeRBot94
      group: SoBeRBot94
    tags:
      - mailspring

  - name: Fetch skype rpm
    get_url:
      url: https://repo.skype.com/latest/skypeforlinux-64.rpm 
      dest: ./tmp-downloads/skypeforlinux-64.rpm
      mode: 0755
      owner: SoBeRBot94
      group: SoBeRBot94

  - name: Install atom
    become: yes
    dnf:
      name: ./tmp-downloads/atom.x86_64.rpm
      state: present

  - name: Install mailspring
    become: yes
    dnf:
      name: ./tmp-downloads/{{ mailspring_version }}-0.1.x86_64.rpm
      state: present
    tags:
      - mailspring

  - name: Install skype
    become: yes
    dnf:
      name: ./tmp-downloads/skypeforlinux-64.rpm
      state: present

  - name: Install pip development packages
    pip:
      name: [ 'icdiff' ]
      state: present
      executable: pip3

  - name: Create docker group
    group:
      name: docker
      state: present

  - name: Add SoBeRBot94 to docker group
    user:
      name: SoBeRBot94
      groups: docker
      append: yes
    notify:
      - Enable docker systemd service
      - Start docker systemd service

  - name: Setup git global configuration
    become: SoBeRBot94
    git_config:
      name: "{{ item.name }}"
      scope: global
      value: "{{ item.value }}"
    with_items:
      - { name: 'user.name', value: 'SoBeRBot94' }
      - { name: 'user.email', value: 'sudarsan.bhargavan94@gmail.com' }
      - { name: 'core.editor', value: 'nvim' }
      - { name: 'core.autocrlf', value: 'input' }
      - { name: 'icdiff.options', value: '--highlight --line-numbers' }

  - name: Create .ssh directory
    become_user: SoBeRBot94
    file:
      path: ~SoBeRBot94/.ssh/
      state: directory
      owner: SoBeRBot94
      group: SoBeRBot94
      mode: 0700

  - name: Generate openssh keypairs for github
    become_user: SoBeRBot94
    openssh_keypair:
      path: ~SoBeRBot94/.ssh/ux305la_github
      size: 4096
      type: rsa
      owner: SoBeRBot94
      group: SoBeRBot94

  - name: Set permissions to the generated ssh keyfiles
    file:
      path: "~SoBeRBot94/.ssh/{{ item.files }}"
      state: touch
      mode: "{{ item.permissions }}"
    with_items:
      - { files: 'ux305la_github.pub', permissions: '0644' }
      - { files: 'ux305la_github', permissions: '0600' }

  - name: Clone oh-my-zsh framework [Root]
    become: yes
    become_user: root
    git:
      repo: https://github.com/robbyrussell/oh-my-zsh.git
      clone: yes
      force: yes
      depth: 1
      dest: ~root/.oh-my-zsh

  - name: Clone powerlevel10k theme [Root]
    become: yes
    become_user: root
    git:
      repo: https://github.com/romkatv/powerlevel10k.git
      clone: yes
      force: yes
      dest: ~root/.oh-my-zsh/custom/themes/powerlevel10k

  - name: Clone oh-my-zsh framework [SoBeRBot94]
    become: no
    become_user: SoBeRBot94
    git:
      repo: https://github.com/robbyrussell/oh-my-zsh.git
      clone: yes
      force: yes
      depth: 1
      dest: ~SoBeRBot94/.oh-my-zsh

  - name: Clone powerlevel10k theme [SoBeRBot94]
    become: yes
    become_user: SoBeRBot94
    git:
      repo: https://github.com/romkatv/powerlevel10k.git
      clone: yes
      force: yes
      dest: ~SoBeRBot94/.oh-my-zsh/custom/themes/powerlevel10k

  - name: Set permissions to oh-my-zsh framework files
    become: yes
    file:
      path: "~{{ item }}/.oh-my-zsh"
      mode: 0755
      recurse: yes
    with_items: "{{ users }}"

  - name: Change default shell to zsh
    become: no
    become_user: "{{ item }}"
    command: chsh -s /usr/bin/zsh
    with_items: "{{ users }}"

  - name: Remove existing zshrc file [Root]
    become: yes
    become_user: root
    file:
      path: ~root/.zshrc
      state: absent

  - name: Remove existing zshrc file [SoBeRBot94]
    become: no
    become_user: SoBeRBot94
    file:
      path: ~SoBeRBot94/.zshrc
      state: absent

  - name: Create symbolic links for zshrc [Root]
    become: yes
    become_user: root
    file:
      src: ~SoBeRBot94/DotFiles/zshrc
      dest: ~root/.zshrc
      state: link
      owner: root
      group: root
      mode: 0644

  - name: Create symbolic links for zshrc [SoBeRBot94]
    become: no
    become_user: SoBeRBot94
    file:
      src: ~SoBeRBot94/DotFiles/zshrc
      dest: ~SoBeRBot94/.zshrc
      state: link
      owner: SoBeRBot94
      group: SoBeRBot94
      mode: 0644

  - name: Fetch hack font zip
    get_url:
      url: https://github.com/ryanoasis/nerd-fonts/releases/download/v{{ hack_font_version }}/Hack.zip
      dest: ./tmp-downloads/Hack.zip

  - name: Create hack font directory
    file:
      path: /usr/share/fonts/Hack
      state: directory
      owner: root
      group: root
      mode: 0755

  - name: Extract Hack font zip
    unarchive:
      src: ./tmp-downloads/Hack.zip
      dest: /usr/share/fonts/Hack/

  - name: Set text scaling factor
    become: SoBeRBot94
    dconf:
      key: "/org/gnome/desktop/interface/text-scaling-factor"
      value: '1.15'

  - name: Create symbolic links for init.vim [SoBeRBot94]
    become: no
    become_user: SoBeRBot94
    file:
      src: ~SoBeRBot94/DotFiles/init.vim
      dest: ~SoBeRBot94/.config/nvim/init.vim
      state: link
      owner: SoBeRBot94
      group: SoBeRBot94
      mode: 0644

  - name: Clone vundle repo [SoBeRBot94]
    become: yes
    become_user: SoBeRBot94
    git:
      repo: https://github.com/VundleVim/Vundle.vim.git
      clone: yes
      force: yes
      dest: ~SoBeRBot94/.config/nvim/bundle/Vundle.vim

  - name: Change ownership of vundle
    become: yes
    file:
      path: ~SoBeRBot94/.config/nvim/bundle/Vundle.vim
      owner: SoBeRBot94
      group: SoBeRBot94
      state: touch

  - name: Clone ctrl-p repo [SoBeRBot94]
    become: yes
    become_user: SoBeRBot94
    git:
      repo: https://github.com/ctrlpvim/ctrlp.vim.git
      clone: yes
      force: yes
      dest: ~SoBeRBot94/.config/nvim/bundle/ctrlp.vim
    tags:
      - ctrlp

  - name: Change ownership of ctrl-p
    become: yes
    file:
      path: ~SoBeRBot94/.config/nvim/bundle/ctrlp.vim
      owner: SoBeRBot94
      group: SoBeRBot94
      state: touch
    tags:
      - ctrlp

  - name: Add flathub remote
    flatpak_remote:
      name: flathub
      flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
      state: present

  - name: Install required flatpaks
    flatpak:
      name: "{{ item }}"
      state: present
    with_items:
      - com.axosoft.GitKraken
      - com.getpostman.Postman
      - com.slack.Slack
      - com.spotify.Client
      - fr.handbrake.ghb
      - io.github.liberodark.OpenDrive
      - net.mediaarea.MediaInfo
      - org.gnome.Logs
      - org.gnome.Lollypop
      - org.keepassxc.KeePassXC
      - org.libreoffice.LibreOffice
      - org.videolan.VLC

  - name: Set tap to click
    become: SoBeRBot94
    dconf:
      key: "/org/gnome/desktop/peripherals/touchpad/tap-to-click"
      value: 'true'

  - name: Install gnome-shell-extensions
    dnf:
      name: "{{ item }}"
      state: latest
    with_items:
      - gnome-shell-extension-auto-move-windows.noarch
      - gnome-shell-extension-dash-to-dock.noarch
      - gnome-shell-extension-disconnect-wifi.noarch
      - gnome-shell-extension-no-topleft-hot-corner.noarch
      - gnome-shell-extension-panel-osd.noarch
      - gnome-shell-extension-refresh-wifi.noarch
      - gnome-shell-extension-workspace-indicator.noarch

  - name: Enable only required extensions and disable unwanted extenstions
    become: SoBeRBot94
    dconf:
      key: "/org/gnome/shell/enabled-extensions"
      value: "['user-theme@gnome-shell-extensions.gcampax.github.com']"

  - name: Enable Copr Repo for Flat Remix Gnome Shell & GTK Themes
    command: dnf copr enable daniruiz/flat-remix -y

  - name: Install Flat Remix Gnome Shell & GTK Themes
    dnf:
      name: [ 'flat-remix-gnome', 'flat-remix-gtk']
      state: present

  - name: Set gnome-shell theme
    become: SoBeRBot94
    dconf:
      key: "/org/gnome/shell/extensions/user-theme/name"
      value: "'Flat-Remix-Darkest'"

  - name: Set gtk theme
    become: SoBeRBot94
    dconf:
      key: "/org/gnome/desktop/interface/gtk-theme"
      value: "'Flat-Remix-GTK-Blue-Darkest-Solid-NoBorder'"

  - name: Enable Copr Repo for La Capitaine Cursor & Icon Themes
    command: dnf copr enable tcg/themes -y

  - name: Install La Capitaine Cursor & Icon Themes
    dnf:
      name: [ 'la-capitaine-cursor-theme', 'la-capitaine-cursor-theme' ]
      state: present

  - name: Set cursor theme
    become: SoBeRBot94
    dconf:
      key: "/org/gnome/desktop/interface/cursor-theme"
      value: "'la-capitaine-cursor-theme'"

  - name: Set icon theme
    become: SoBeRBot94
    dconf:
      key: "/org/gnome/desktop/interface/icon-theme"
      value: "'la-capitaine-icon-theme'"

  - name: Enable fractional scaling for high dpi monitors
    become: SoBeRBot94
    dconf:
      key: "/org/gnome/mutter/experimental-features"
      value: "['scale-monitor-framebuffer']"

  handlers:
  
  - name: Clean dnf metadata
    become: yes
    command: dnf clean metadata

  - name: Update dnf cache
    become: yes
    command: dnf makecache

  - name: Enable supervisord service
    become: yes
    systemd:
      name: supervisord
      enabled: yes

  - name: Enable docker systemd service
    become: yes
    systemd:
      name: docker
      enabled: yes

  - name: Start docker systemd service
    become: yes
    systemd:
      name: docker
      state: restarted

  - name: Start libvirtd service
    become: yes
    systemd:
      name: libvirtd
      state: restarted
